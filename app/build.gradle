apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'io.fabric'

buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

android {
    signingConfigs {
        release {
            keyAlias 'pomo_waffle_launcher'
            keyPassword 'pomohouse'
            storeFile file('D:/work_pomo_data/key-store/pomo-waffle-key.jks')
            storePassword 'pomo@2017'
        }
    }
    compileSdkVersion 25
    buildToolsVersion '25.0.2'
    defaultConfig {
        applicationId "com.pomohouse.launcher"
        minSdkVersion 22
        targetSdkVersion 22
        versionCode 6
        versionName '1.0.6'
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled = true
    }
    buildTypes {
        debug {
            debuggable true
            //signingConfig signingConfigs.release
            //signingConfig signingConfigs.release
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //signingConfig signingConfigs.release
            //signingConfig signingConfigs.release
        }
    }/*
    productFlavors {
        develop {
            minSdkVersion 19
        }
        production {
            minSdkVersion 19
        }
    }*/
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
    lintOptions {
        abortOnError false
        absolutePaths false
        //lintConfig file("lint.xml")
        //disable 'MissingTranslation'
    }
    productFlavors {
    }

    splits {

        // Configures multiple APKs based on ABI.
        abi {

            // Enables building multiple APKs per ABI.
            enable true

            // By default all ABIs are included, so use reset() and include to specify that we only
            // want APKs for x86 and x86_64.

            // Resets the list of ABIs that Gradle should create APKs for to none.
            reset()

            // Specifies a list of ABIs that Gradle should create APKs for.
//            include "x86", "armeabi-v7a", "armeabi-v8a"
            include "armeabi-v7a"

            // Specifies that we do not want to also generate a universal APK that includes all ABIs.
            universalApk false
        }
    }
}

ext {
    supportLib = '25.3.1'
}
dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    //Image Loader
    //Animation View
    compile('com.crashlytics.sdk.android:crashlytics:2.6.6@aar') {
        transitive = true;
    }
    compile project(path: ':component')
    compile project(':network-library')
    compile "com.android.support:support-v4:$supportLib"
    compile "com.android.support:recyclerview-v7:$supportLib"
    compile "com.android.support:design:$supportLib"
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.jakewharton:butterknife:8.3.0'
    compile 'com.levelmoney.velodrome:velodrome:1.0'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.scottyab:secure-preferences-lib:0.1.4'
    compile 'com.nineoldandroids:library:2.4.0'
    compile 'com.daimajia.easing:library:1.0.1@aar'
    compile 'com.daimajia.androidanimations:library:1.1.3@aar'
    compile 'pl.droidsonroids.gif:android-gif-drawable:1.2.2'
    /*compile 'com.google.android.gms:play-services-location:11.0.2'*/
    /*    compile 'com.google.firebase:firebase-messaging:11.0.2'*/
    compile 'com.google.android.gms:play-services-location:10.2.6'
    compile 'com.google.firebase:firebase-messaging:10.2.6'
    testCompile 'junit:junit:4.12'
    apt 'com.jakewharton:butterknife-compiler:8.3.0'
    provided 'javax.annotation:jsr250-api:1.0'
    compile 'com.google.zxing:core:latest.integration'
    compile project(':library')
}
apply plugin: 'com.google.gms.google-services'